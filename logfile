==2655143== Memcheck, a memory error detector
==2655143== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2655143== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==2655143== Command: ./fdf ./test_maps/42.fdf
==2655143== Parent PID: 2652665
==2655143== 
==2655143== Conditional jump or move depends on uninitialised value(s)
==2655143==    at 0x10A81B: smooth_scale (shift.c:42)
==2655143==    by 0x10AF0D: main (main.c:73)
==2655143== 
==2655143== Conditional jump or move depends on uninitialised value(s)
==2655143==    at 0x10A83F: smooth_scale (shift.c:46)
==2655143==    by 0x10AF0D: main (main.c:73)
==2655143== 
==2655143== Conditional jump or move depends on uninitialised value(s)
==2655143==    at 0x10A84B: smooth_scale (shift.c:46)
==2655143==    by 0x10AF0D: main (main.c:73)
==2655143== 
==2655143== Conditional jump or move depends on uninitialised value(s)
==2655143==    at 0x10A8A7: smooth_scale (shift.c:51)
==2655143==    by 0x10AF0D: main (main.c:73)
==2655143== 
==2655143== Conditional jump or move depends on uninitialised value(s)
==2655143==    at 0x10A8B3: smooth_scale (shift.c:51)
==2655143==    by 0x10AF0D: main (main.c:73)
==2655143== 
==2655143== Conditional jump or move depends on uninitialised value(s)
==2655143==    at 0x10A90C: smooth_scale (shift.c:56)
==2655143==    by 0x10AF0D: main (main.c:73)
==2655143== 
==2655143== Conditional jump or move depends on uninitialised value(s)
==2655143==    at 0x10A918: smooth_scale (shift.c:56)
==2655143==    by 0x10AF0D: main (main.c:73)
==2655143== 
==2655143== 
==2655143== HEAP SUMMARY:
==2655143==     in use at exit: 317,955 bytes in 3,107 blocks
==2655143==   total heap usage: 83,433 allocs, 80,326 frees, 59,513,265 bytes allocated
==2655143== 
==2655143== 0 bytes in 1 blocks are definitely lost in loss record 1 of 2,271
==2655143==    at 0x48484F4: malloc (m_replacemalloc/vg_replace_malloc.c:442)
==2655143==    by 0x4005A22: malloc (rtld-malloc.h:56)
==2655143==    by 0x4005A22: _dl_find_object_update (dl-find_object.c:791)
==2655143==    by 0x400ECCF: dl_open_worker_begin (dl-open.c:735)
==2655143==    by 0x4A55A97: _dl_catch_exception (dl-error-skeleton.c:208)
==2655143==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==2655143==    by 0x4A55A97: _dl_catch_exception (dl-error-skeleton.c:208)
==2655143==    by 0x400E34D: _dl_open (dl-open.c:883)
==2655143==    by 0x497163B: dlopen_doit (dlopen.c:56)
==2655143==    by 0x4A55A97: _dl_catch_exception (dl-error-skeleton.c:208)
==2655143==    by 0x4A55B62: _dl_catch_error (dl-error-skeleton.c:227)
==2655143==    by 0x497112D: _dlerror_run (dlerror.c:138)
==2655143==    by 0x49716C7: dlopen_implementation (dlopen.c:71)
==2655143==    by 0x49716C7: dlopen@@GLIBC_2.34 (dlopen.c:81)
==2655143== 
==2655143== LEAK SUMMARY:
==2655143==    definitely lost: 0 bytes in 1 blocks
==2655143==    indirectly lost: 0 bytes in 0 blocks
==2655143==      possibly lost: 0 bytes in 0 blocks
==2655143==    still reachable: 317,955 bytes in 3,106 blocks
==2655143==         suppressed: 0 bytes in 0 blocks
==2655143== Reachable blocks (those to which a pointer was found) are not shown.
==2655143== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2655143== 
==2655143== Use --track-origins=yes to see where uninitialised values come from
==2655143== For lists of detected and suppressed errors, rerun with: -s
==2655143== ERROR SUMMARY: 8 errors from 8 contexts (suppressed: 0 from 0)
